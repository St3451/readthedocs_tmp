Usage
=====

Oncodrive3D is a 3D clustering software designed for the identification of 
cancer driver genes. This Python-based tool requires the installation of a few 
Python packages, the download of files from the AlphaFold Protein Structure 
Database (AlphaFold DB), and the construction of the necessary dataset files 
for the tool to function.

To install the softwares, download the files, and build all the requirements, 
follow the steps in :ref:`installation` and :ref:`building datasets`. 

To run Oncodrive3D, check out the :ref:`running 3D-clustering analysis` 
section.


.. _installation:

Installation
------------

.. tip::

   Even if it is not required, we recommend installing Oncodrive3D in a virtual 
   environment (e.g., using `conda <https://conda.io/projects/conda/en/latest/user-guide/index.html>`_ 
   or `mamba <https://mamba.readthedocs.io/en/latest/>`_) to isolate its 
   dependencies from your system-wide Python installation.

   .. code-block:: bash

      conda create -n env_name python=3.8
      conda activate env_name

Install using pip from PyPI
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: bash

   pip install oncodrive3d


.. important::

   Installation from PyPI not yet enabled.

Install using pip from repository
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: bash

   git clone https://github.com/bbglab/clustering_3d.git
   cd clustering_3d           # >>> Modify to oncodrive3D
   pip install .


.. _building datasets:

Building datasets
-----------------

This step download AlphaFold predictions (PDB structures and predicted aligned 
error - PAE) of the selected organism from
`AlphaFold DB <https://alphafold.ebi.ac.uk/>`_ 
and compile all files required for the tool to run. It is required once after 
installation or any time the user wants to build a different dataset 
(e.g., compile the datasets for a different organism or using a different 
threshold to define contacts between residues). 

.. code-block:: bash

   oncodrive3D build-datasets -o build_folder/

The above command build the datasets for the human proteome with default 
configuration. However, there are a number of parameters and options that can 
be added:

-o, --output_dir <path>   Build folder where to save the files. Default: ``datasets/``

-s, --organism <str>   Organism name (``human`` or ``mouse``). Default: ``human``

-d, --distance_threshold <int>   Distance threshold (Ã…) to define contact between amino acids. Default: ``10``

-u, --uniprot_to_hugo <path>   Optional path to a custom dictionary including Uniprot IDs to HUGO symbols mapping (if not provided, it will be generated by using the `ID mapping service of UniprotKB <https://www.uniprot.org/help/id_mapping/>`_). 

-c, --cores <int>   Number of CPU cores to use in the computation. Default: ``number of CPU cores available``

-a, --af_version <int>   Version of AlphaFold 2 predictions to download from  AlphaFold DB. Default: ``4``

-k, --keep_pdb_files <flag: set to enable>   Keep PDB files that would otherwise be deleted after building the datasets.

-y, --yes <flag: set to enable>   Disable user interaction, preventing prompts for overwriting confirmation if the `output_dir` already exists.

-v, --verbose <flag: set to enable>   Ask method for a more verbose output.

After successfully completing this step, the build folder must include the 
following files and directories:

- :file:`confidence.csv`: CSV file including per-residue predicted local distance difference test (pLDDT) score for any protein of the proteome
- :file:`seq_for_mut_prob.csv`: CSV file including HUGO symbol, Uniprot ID, DNA and protein sequences for any proteine of the proteome
- :file:`prob_cmaps/`: directory including the contact probability map (pCMAPs) for any protein of the proteome
- :file:`pae/`: directory including the AlphaFold predicted aligned error (PAE) for any protein of the proteome with a length lower than 2700 amino acids

.. note::

   This step involves a computationally intensive process that can be 
   time-consuming. To expedite this step and improve performance, we recommend 
   running it on a cluster with additional resources, such as more CPUs.


.. _running 3D-clustering analysis:

Running 3D-clustering analysis
------------------------------

.. code-block:: bash

   oncodrive3D run -i input.maf -p mut_profile.json -d build_folder/

The above command run Oncodrive3D to perform a 3D-clustering analysis using the 
mutation profile of the cohort and default configuration. However, there are a 
number of parameters and options that can be added:

-i, --input_maf_path <path (required)>   MAF file of the cohort including the annotated mutations. 

-p, --mut_profile_path <path>   Mut profile of the cohort (dictionary of 192 key-value pairs) in json format. 

-o, --output_dir <path>   Output directory. Default: ``results/``

-d, --data_dir <path>   Build folder including the files compiled during the :ref:`building datasets` step. Default: ``datasets/``

-n, --n_iterations <int>   Number of densities to be simulated. Default: ``10000``

-a, --alpha <float>   Significant threshold for the p-value of res and gene. Default: ``0.01``

-P, --cmap_prob_thr <float>   Threshold to define contacts between residues based on distance on predicted structure and PAE. Default: ``0.5``

-H, --hits_only <flag: set to enable>   Returns only positions in clusters.

-f, --no_fragments <flag: set to enable>   Disable processing of fragmented (AF-F) proteins.

-c, --cores <int>   Number of CPU cores to use in the computation. Default: ``number of CPU cores available``

-s, --seed <int>   Seed to be used for reproducibility.

-v, --verbose <flag: set to enable>   Ask method for a more verbose output. # <<Change to debug>>

-t, --cancer_type <str>   Cancer type used as metadata in the output file. 

-C, --cohort <str>   Cohort name used as metadata and filename for the output file.

.. important::

   Oncodrive3D uses the mutational profile (`-p, --mut_profile_path`) of the 
   cohort to improve the accuracy of neutral mutagenesis simulations. However, 
   it's not strictly required. If the mutational profile is not provided, the 
   tool will use a simple, uniform distribution as a default behavior for 
   simulating mutations.


Input & output
--------------

Input
^^^^^

Oncodrive3D analyse patterns of somatic mutations at the cohort level, and 
relies on two primary input files:

- :file:`input.maf` (`required`): `Mutation Annotation Format (MAF) <https://docs.gdc.cancer.gov/Data/File_Formats/MAF_Format/#introduction>`_ file annotated with consequences (e.g., by using `Ensembl Variant Effect Predictor (VEP) <https://www.ensembl.org/info/docs/tools/vep/index.html>`_).
- :file:`mut_profile.json` (`optional`): dictionary including the normalized frequencies of mutations (`values`) in every possible trinucleotide contexts (`keys`), such as 'ACA>A', 'ACC>A', and so on.

MAF
***

A `Mutation Annotation Format (MAF) <https://docs.gdc.cancer.gov/Data/File_Formats/MAF_Format/#introduction>`_ 
file that encompasses all somatic mutations identified within a specific cohort 
and their annotations (e.g., annotated by using `Ensembl Variant Effect Predictor (VEP) <https://www.ensembl.org/info/docs/tools/vep/index.html>`_).

For example, after performing variant calling, it can be generated by VEP using 
a Variant Call Format (VCF) file as input: 

.. code-block:: bash

   vep --dir /path/to/vep_data/ -i input.vcf --offline --cache -o output.maf --species homo_sapiens --assembly GRCh38 --fork 8 --symbol --protein --tab --canonical --pick

The MAF file must include at least the following four fields:

- ``Hugo_Symbol`` or ``SYMBOL``: HUGO symbol.
- ``Variant_Classification`` or ``Consequence``: translational effect of variant allele.
- ``HGVSp_Short`` or both ``Amino_acids`` and ``Protein_position``: variant's protein sequence in HGVS recommended format (1-letter amino acid codes) or two fields defining amino acids substitition ('REF/ALT' e.g., 'E/V') and protein position. 
- ``Tumor_Sample_Barcode`` or ``#Uploaded_variation``: aliquot barcode for the tumor sample.

Mutation profile
****************

The mutation profile of a cohort rapresents the count or the normalized 
frequencies of mutations in every possible k-nucleotide (e.g., trinucleotide or 
pentanucleotide) contexts. 

The mutation profile used by Oncodrive3D is a dictionary (json file) including 
the frequency of mutations (`values`) of the cohort in 192 trinucleotide 
contexts (`keys`), normalized by the trinucleotide bias. It can be computed 
using `BGsignature  <https://bitbucket.org/bgframework/bgsignature/src/master/>`_ 
or other bioinformatics softwares.

For example:

.. code-block:: bash

   pip install bgsignature
   bgsignature count -r regions_file.tsv -s 3 -g GRCh38 --cores 8 --collapse --exclude-N -o count.json
   bgsignature normalize -m mutations_file.tsv -r regions_file.tsv --normalize count.json -s 3 -g GRCh38 --collapse --cores 8 -o mut_profile.json

To compute the mutation profile with BGsignature two main files are required:

- :file:`mutations_file.tsv`: Tab Separated File (TSV) including an header and at least the following columns: ``CHROMOSOME``, ``POSITION``, ``REF``, ``ALT``.
- :file:`my_regions_file.tsv`: Tab Separated File (TSV) including an header and at least the following columns: ``CHROMOSOME``, ``START``, ``END``, ``ELEMENT``. This file should include the coordinates of the genomic regions (e.g., a panel of genes, the whole exome, or the whole genome) that the user wants to consider for computing the mutation profile.


Output
^^^^^^

Oncodrived3D outputs two files for each analysed cohort:

- :file:`cohort_filename.3d_clustering_genes.csv`: A Comma-Separated Values (CSV) file including the result of the analysis at the level of genes.
- :file:`cohort_filename.3d_clustering_pos.csv`: A Comma-Separated Values (CSV) file including the result of the analysis at the level of mutated positions.

.. note::

   The file :file:`cohort_filename.3d_clustering_pos.csv` is generated only if 
   at least one gene in the cohort is successfully processed.

Genes-level result
******************

This file includes the result of the 3D-clustering analysis for each mutated 
genes in the cohort. The genes (rows) are sorted by ascending order based on 
the observed deviation from neutrality. 

It includes the following fields:

:Gene: HUGO symbol.
:Uniprot_ID: Uniprot ID.
:pval: Empirical p-value of the gene (lowest p-value across its mutated positions).
:qval: Empirical q-value of the gene (p-value corrected by Benjamini-Hochberg method).
:C_gene: Binary label indicating if the gene is under positive selection (q-value < Î±).
:C_pos: List of binary labels including the positions forming significant clusters.
:C_label: List of labels indicating to which cluster each significant position belong to.
:Ratio_obs_sim_top_vol: Ratio between the observed and simulated anomaly score of the volume of the most significant residue.
:Clust_res: Number of residues detected as significant.
:Mut_in_gene: Number of mutations in the gene.
:Clust_mut: Number of mutations falling in the volume of any significant residues.
:Mut_in_top_vol: Number of mutations falling in the volume of the most significant residue.
:Mut_in_top_cl_vol: Number of mutations falling in the volume of the most significant cluster.
:Tot_samples: Number of samples having a mutation in the gene.
:Samples_in_top_vol: Number of samples having a mutation in the volume of the most significant residue.
:Samples_in_top_cl_vol: Number of samples having a mutation in the volume of the the most significant cluster.
:PAE_top_vol: Weighted average PAE of the volume of the most significant residue.
:pLDDT_top_vol: Weighted average pLLDT of the volume of the most significant residue.
:pLDDT_top_cl_vol: Weighted average pLDDT of the volume of the most significant cluster.
:F: Number of AlphaFold fragments.
:Status: - ``Processed`` if the gene is processed and a p-value is assigned
         - ``No_mut`` if the total number of mutations in the gene is equal or lower than 1
         - ``No_density`` if the largest number of mutations in the volume of any residue is equal or lower than 1
         - ``Cmap_not_found`` if the contact map is not found
         - ``Mut_not_in_structure`` if the mutation is mapped to a position that is not in the PDB structure
         - ``No_ID_mapping`` if there isn't a corresponding Uniprot ID for the given HUGO symbol (in the :file:`seq_for_mut_prob.csv`)
         - ``Fragmented`` if the structure of the protein is predicted as fragments by AlphaFold and the processing of fragments is disabled (`-f, --no_fragments`)
:Cancer: Cancer type.
:Cohort: Cohort name.

Positions-level result
**********************

This file includes the result of the 3D-clustering analysis for each mutated 
position (rows) of any mutated gene in the cohort. 
   
It includes the following fields:

:Gene: HUGO symbol.
:Uniprot_ID: Uniprot ID.
:F: Number of AlphaFold fragments.
:Pos: Mutated position in the protein.
:Mut_in_gene: Number of mutations hitting the gene.
:Mut_in_res: Number of mutations hitting the residue.
:Mut_in_vol: Number of mutations falling in the volume of the residue.
:Obs_anomaly: Observed anomaly score of the volume of the residue.
:Ratio_obs_sim: Ratio between the observed and simulated anomaly score of the volume of residue.
:pval: Empirical p-value of the volume of the residue.
:C: Binary label indicating if the volume of the residue is under positive selection (p-value < Î±).
:C_ext: Binary label indicating that the volume of the residue is not significant but the residue falls into another significant volume.
:Cluster: Label indicating the cluster to which the residue belong to
:Rank: Rank of the volume within the gene.
:Tot_samples: Number of samples having a mutation in the sgene.
:Samples_in_vol: Number of samples having a mutation in the volume of the residue.
:Samples_in_cl_vol: Number of samples having a mutations falling in the volume of the cluster to which the residue belongs.
:Mut_in_cl_vol: Number of mutations falling in the volume of the cluster to which the residue belongs.
:Res_in_cl: Number of residues detected as significant in the cluster to which the residue belongs.
:PAE_vol: Weighted average PAE of the volume of the residue.
:pLDDT_res: pLDDT of the residue.
:pLDDT_vol: Weighted average pLDDT of the volume of the residue.
:pLDDT_cl_vol: Weighted average pLDDT of the volume of the cluster to which the residue belongs.
:Cancer: Cancer type.
:GeneCohort: Cohort name.


Testing
-------

To ensure that Oncodrive3D is correctly installed and configured, you can 
perform a test run using the provided test input files. 

.. code-block:: bash

   oncodrive3D run -i test/TCGA_WXS_ACC.in.maf -p test/TCGA_WXS_ACC.mutrate.json -o test/results/

.. note::

   By default, Oncodrive3D expects to find the necessary dataset files in the 
   ``datasets/`` directory. These files should have been created during the 
   :ref:`building datasets` step. If you used a different directory to build 
   the datasets, make sure to specify it using the appropriate `-d` option.

.. tip::

   You can inspect the files in the ``test/`` directory to better understand the 
   format and structure of the input and output data.