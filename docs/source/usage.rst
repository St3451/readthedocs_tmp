Usage
=====

Oncodrive3D is a Python-based method which requires the installation of 
a few Python packages, the download of different files from `AlphaFold Protein Structure Database (AlphaFold DB) <https://alphafold.ebi.ac.uk/>`_, 
and the build of the datasets files required for the tool to run. 


To install the softwares, download the files, and build all the requirements, 
follow the steps in :ref:`installation` and :ref:`building datasets`.
 

To run Oncodrive3D, check out the :ref:`running 3D-clustering analysis` 
section.

.. _installation:

Installation
------------

Create virtual environment
^^^^^^^^^^^^^^^^^^^^^^^^^^

We recommend installing Oncodrive3D in a virtual environment (e.g.,
using `conda <https://conda.io/projects/conda/en/latest/user-guide/index.html>`_ 
or `mamba <https://mamba.readthedocs.io/en/latest/>`_) to isolate its 
dependencies from your system-wide Python installation.

.. code-block:: bash

   conda create -n my_env python=3.8
   conda activate my_env

Install using pip from PyPI
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: bash

   pip install oncodrive3d


.. important::

   Installation from PyPI not yet enabled.

Install using pip from repository
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: bash

   git clone https://github.com/bbglab/clustering_3d.git
   cd clustering_3d           # >>> Modify to oncodrive3D
   pip install .


.. _building datasets:

Building datasets
-----------------

This step download AlphaFold predictions (PDB structures and predicted aligned 
error (PAE)) of the selected organism from
`AlphaFold DB <https://alphafold.ebi.ac.uk/>`_ 
and compile all files required for the tool to run. It is required once after 
installation or any time the user wants to build a different dataset 
(e.g., compile the datasets for a different organism or using a different 
threshold to define contacts between residues). 

Build the datasets for the human proteome with default configuration:

.. code-block:: bash

   oncodrive3D build-datasets

There are a number of parameters and options that can be added:

-o --output_path <path>   Build folder where to save the files. Default: ``datasets``

-s --organism <str>   Organism name (``human`` or ``mouse``). Default: ``human``

-u --uniprot_to_hugo <path>   Optional path to a custom dictionary including Uniprot IDs to HUGO symbols mapping (if not provided, it will be generated by using the `ID mapping service of UniprotKB <https://www.uniprot.org/help/id_mapping/>`_). 

-c --num_cores <int>   Number of CPU cores to use in the computation. Default: ``number of CPU cores available``

-a --af_version <int>   Version of AlphaFold 2 predictions to download from  AlphaFold DB. Default: ``4``

-k --keep_pdb_files   Keep PDB files (flag: set to enable) that would otherwise be deleted after building the datasets.

-y --yes   Disable user interaction, preventing prompts for overwriting confirmation if the `output_path` already exists (flag: set to enable).

-v --verbose   Ask method for a more verbose output (flag: set to enable). # <<Change to debug>>

After successfully completing this step, the build folder must include the 
following files and directories:

- :file:`confidence.csv`: per-residue predicted local distance difference test (pLDDT) score for any protein of the proteome
- :file:`seq_for_mut_prob.csv`: Hugo symbol, Uniprot ID, DNA and protein sequences for any proteine of the proteome
- :file:`prob_cmaps/`: directory including a contact probability map (pCMAPs) for any protein of the proteome
- :file:`pae/`: directory including the AlphaFold predicted aligned error (PAE) for any protein of the proteome with a length lower than 2700 amino acids

.. note::

   This step is time consuming.


.. _running 3D-clustering analysis:

Running 3D-clustering analysis
------------------------------

Run Oncodrive3D to perform a 3D-clustering analysis with default configuration:

.. code-block:: bash

   oncodrive3D run -i my_input.in.maf -p my_mut_profile.mutrate.json   # >>> Check .in. .mutrate.  use of <> ?

There are a number of parameters and options that can be added:

-i --input_maf_path <path> (required)   MAF file of the cohort including the annotated mutations. 

-p --mut_profile_path <path>   Mut profile (list of 96 floats) of the cohort (json). 

-o --output_path <path>   Output directory. Default: ``results``

-d --data_dir <path>   Build folder. Default: ``datasets``

-n --n_iterations <int>   Number of densities to be simulated. Default: ``10000``

-a --alpha <float>   Significant threshold for the p-value of res and gene. Default: ``0.01``

-P --cmap_prob_thr <float>   Threshold to define AAs contacts based on distance on predicted structure and PAE. Default: ``0.5``

-H --hits_only   Returns only positions in clusters (flag: set to enable).

-f --no_fragments   Disable processing of fragmented (AF-F) proteins (flag: set to enable).

-u --num_cores <int>   Number of CPU cores to use in the computation. Default: ``number of CPU cores available``

-S --seed <int>   Seed to be used for reproducibility.

-v --verbose   Ask method for a more verbose output (flag: set to enable). # <<Change to debug>>

-t --cancer_type <str>   Cancer type (metadata). 

-C --cohort <str>   Cohort name (metadata).

.. important::

   Oncodrive3D utilizes the mutational profile (`mut_profile_path`) of the 
   cohort to improve the accuracy of neutral mutagenesis simulations. However, 
   it's not strictly required. If the mutational profile is not provided, the 
   tool will use a simple, uniform distribution as a default behavior for 
   simulating mutations.

Input & output
--------------

Input
^^^^^

Oncodrive3D analyze patterns of somatic mutations at the cohort level, and 
relies on two primary input files:

- :file:`my_cohort_maf.in.maf` (required): `Mutation Annotation Format (MAF) <https://docs.gdc.cancer.gov/Data/File_Formats/MAF_Format/#introduction>`_ file annotated with consequences on the protein sequence by using `Ensembl Variant Effect Predictor (VEP) <https://www.ensembl.org/info/docs/tools/vep/index.html>`_
- :file:`my_cohort_mut_profile.mutrate.json` (optional): dictionary including the normalized frequencies of mutations (`values`) in every possible trinucleotide contexts (`keys`), such as 'ACA>A', 'ACC>A', and so on.

MAF
***

A `Mutation Annotation Format (MAF) <https://docs.gdc.cancer.gov/Data/File_Formats/MAF_Format/#introduction>`_ 
file that encompasses all somatic mutations identified within a specific cohort 
and annotated using the `Ensembl Variant Effect Predictor (VEP) <https://www.ensembl.org/info/docs/tools/vep/index.html>`_.

It can be generated by VEP using a Variant Call Format (VCF) file as input.

For example: 

.. code-block:: bash

   vep --dir /my_path/to/vep_data -i my_input.vcf --offline --cache -o my_output.maf --species homo_sapiens --assembly GRCh38 --fork 8 --symbol --protein --tab --canonical --pick

The MAF file must include at least the following three columns or features:

- ``Variant_Classification``: translational effect of variant allele
- ``HGVSp_Short``: variant's protein sequence in HGVS recommended format, using 1-letter amino acid codes
- ``Tumor_Sample_Barcode``: aliquot barcode for the tumor sample

.. important::

   Check the output of VEP because and if it is parsed by Intogen because I did 
   parse it for the mouse..

Mutation profile
****************

.. important::

   Explain here how to obtain the inputs and what they are.

Output
^^^^^^